@mixin media-breakpoint-only($size) {
  @if $size == xs {
    @media (max-width: 575.98px) {
      @content;
    }
  } @else if $size == sm {
    @media (min-width: 576px) and (max-width: 767.98px) {
      @content;
    }
  } @else if $size == md {
    @media (min-width: 768px) and (max-width: 991.98px) {
      @content;
    }
  } @else if $size == lg {
    @media (min-width: 992px) and (max-width: 1199.98px) {
      @content;
    }
  } @else if $size == xl {
    @media (min-width: 1200px) {
      @content;
    }
  } @else if($size == xxl) {
    @media (min-width: 1400px) {
      @content;
    }
  } @else if($size == xxxl) {
    @media (min-width: 1600px) {
      @content;
    }
  }
}

@mixin media-breakpoint-down($size) {
  @if $size == xs {
    @media (max-width: 359.98px) {
      @content;
    }
  } @else if $size == xsl {
    @media (max-width: 440px) {
      @content;
    }
  } @else if $size == sm {
    @media (max-width: 575.98px) {
      @content;
    }
  } @else if $size == md {
    @media (max-width: 767.98px) {
      @content;
    }
  } @else if $size == mdl {
    @media (max-width: 890px) {
      @content;
    }
  } @else if $size == lg {
    @media (max-width: 991.98px) {
      @content;
    }
  } @else if $size == xl {
    @media (max-width: 1199.98px) {
      @content;
    }
  } @else if($size == xxl) {
    @media (max-width: 1400px) {
      @content;
    }
  }
}

@mixin media-breakpoint-history($size) {
  @if $size == md {
    @media (min-width: 750) {
      @content;
    }
  } @else if $size == mdl {
    @media (max-width: 1000px) {
      @content;
    }
  } @else if $size == sm {
    @media (max-width: 749px) {
      @content;
    }
  }
}

// Кнопка статуса. цвет в зависимости от статуса.
@mixin status-element($color) {
  border: 1px solid $color;
  background-color: $color;
  &:hover {
    border: 1px solid lighten($color, 10%);
    background-color: lighten($color, 10%);
  }
  &:focus {
    border: 1px solid $color;
    background-color: $color;
  }
  &.disabled:hover {
    cursor: default;
    border: 1px solid $color;
    background-color: $color;
  }
}

@mixin statuses {
  .created {
    @include status-element($blue-secondary);
  }
  .work {
    @include status-element($success);
  }

  .done {
    @include status-element($purple);
  }

  .paused {
    @include status-element($red);
  }
}

//  Подсветка текущего статуса в зависимости от значения в StatusChange
@mixin status-change-current($bg-color) {
  background-color: $bg-color;
  span {
    color: $white;
  }
  &:hover {
    background-color: $bg-color !important;
    color: $white;
    cursor: default;
    span {
      color: $white;
    }
  }
}

@mixin status-change {
  // :global(.ant-btn.ant-btn-text).button
  :global(.ant-btn.ant-btn-text).button.created {
    @include status-change-current($blue-secondary);
  }
  .work {
    @include status-change-current($success);
  }

  .done {
    @include status-change-current($purple);
  }

  .paused {
    @include status-change-current($red);
  }
}

@mixin tag-css($color, $bg-opacity) {
  border: 1px solid $color;
  background-color: rgba($color, $bg-opacity);
  color: $color;
  svg {
    color: $color;
  }
  &.noBackground {
    background-color: transparent;
  }
}
